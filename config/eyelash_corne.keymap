#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        macro_excl: macro_excl {
            compatible = "zmk,behavior-macro";
            label = "Macro: !";
            bindings = <&str "!">;
        };

        macro_at: macro_at {
            compatible = "zmk,behavior-macro";
            label = "Macro: @";
            bindings = <&str "@">;
        };

        macro_hash: macro_hash {
            compatible = "zmk,behavior-macro";
            label = "Macro: #";
            bindings = <&str "#">;
        };

        macro_dollar: macro_dollar {
            compatible = "zmk,behavior-macro";
            label = "Macro: $";
            bindings = <&str "$">;
        };

        macro_percent: macro_percent {
            compatible = "zmk,behavior-macro";
            label = "Macro: %";
            bindings = <&str "%">;
        };

        macro_caret: macro_caret {
            compatible = "zmk,behavior-macro";
            label = "Macro: ^";
            bindings = <&str "^">;
        };

        macro_amp: macro_amp {
            compatible = "zmk,behavior-macro";
            label = "Macro: &";
            bindings = <&str "&">;
        };

        macro_star: macro_star {
            compatible = "zmk,behavior-macro";
            label = "Macro: *";
            bindings = <&str "*">;
        };

        macro_lpar: macro_lpar {
            compatible = "zmk,behavior-macro";
            label = "Macro: (";
            bindings = <&str "(">;
        };

        macro_rpar: macro_rpar {
            compatible = "zmk,behavior-macro";
            label = "Macro: )";
            bindings = <&str ")">;
        };

        macro_minus: macro_minus {
            compatible = "zmk,behavior-macro";
            label = "Macro: -";
            bindings = <&str "-">;
        };

        macro_equal: macro_equal {
            compatible = "zmk,behavior-macro";
            label = "Macro: =";
            bindings = <&str "=">;
        };

        macro_lbkt: macro_lbkt {
            compatible = "zmk,behavior-macro";
            label = "Macro: [";
            bindings = <&str "[">;
        };

        macro_rbkt: macro_rbkt {
            compatible = "zmk,behavior-macro";
            label = "Macro: ]";
            bindings = <&str "]">;
        };

        macro_bslh: macro_bslh {
            compatible = "zmk,behavior-macro";
            label = "Macro: backslash";
            bindings = <&str "\\">;
        };

        macro_grave: macro_grave {
            compatible = "zmk,behavior-macro";
            label = "Macro: backtick";
            bindings = <&str "`">;
        };

        macro_under: macro_under {
            compatible = "zmk,behavior-macro";
            label = "Macro: _";
            bindings = <&str "_">;
        };

        macro_plus: macro_plus {
            compatible = "zmk,behavior-macro";
            label = "Macro: +";
            bindings = <&str "+">;
        };

        macro_lbrc: macro_lbrc {
            compatible = "zmk,behavior-macro";
            label = "Macro: {";
            bindings = <&str "{">;
        };

        macro_rbrc: macro_rbrc {
            compatible = "zmk,behavior-macro";
            label = "Macro: }";
            bindings = <&str "}">;
        };

        macro_pipe: macro_pipe {
            compatible = "zmk,behavior-macro";
            label = "Macro: pipe";
            bindings = <&str "|">;
        };

        macro_tilde: macro_tilde {
            compatible = "zmk,behavior-macro";
            label = "Macro: tilde";
            bindings = <&str "~">;
        };
    };

    keymap {
        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp ESCAPE      &kp Q  &kp W  &kp E     &kp R  &kp T                                   &kp UP                &kp Y      &kp U  &kp I          &kp O    &kp P     &kp LEFT_BRACKET
&kp LEFT_SHIFT  &kp A  &kp S  &kp D     &kp F  &kp G                         &kp LEFT  &kp ENTER  &kp RIGHT  &kp H      &kp J  &kp K          &kp L    &kp SEMI  &kp SQT
&kp LCTRL       &kp Z  &kp X  &kp C     &kp V  &kp B      &rgb_ug RGB_TOG              &kp DOWN              &kp N      &kp M  &kp COMMA      &kp DOT  &kp FSLH  &kp RIGHT_ALT
                              &kp LGUI  &mo 1  &kp SPACE                                                     &kp ENTER  &mo 2  &kp BACKSPACE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&trans  &kp F1        &kp F2           &kp F3        &kp F4        &kp F5                                  &mmv MOVE_UP                     &kp F6        &kp F7          &kp F8        &kp F9          &kp F10          &kp F11
&trans  &kp NUMBER_1  &kp NUMBER_2     &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5            &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp NUMBER_6  &kp NUMBER_7    &kp NUMBER_8  &kp NUMBER_9    &kp NUMBER_0     &kp F12
&trans  &trans        &kp KP_MULTIPLY  &kp SLASH     &kp MINUS     &kp PLUS      &trans                    &mmv MOVE_DOWN                   &trans        &kp DOWN_ARROW  &kp UP_ARROW  &kp LEFT_ARROW  &kp RIGHT_ARROW  &kp PG_DN
                                       &trans        &trans        &trans                                                                   &trans        &trans          &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            bindings = <
                &bt BT_NXT       &macro_excl     &macro_at       &macro_hash     &macro_dollar   &macro_percent                                              &mmv MOVE_UP               &macro_caret   &macro_amp     &macro_star    &macro_lpar  &macro_rpar  &kp BSPC
                &bt BT_PRV       &bt BT_CLR       &mkp LCLK        &mkp MCLK        &mkp RCLK        &mkp MB4                                 &mmv MOVE_LEFT  &mkp LCLK     &mmv MOVE_RIGHT &macro_minus  &macro_equal  &macro_lbkt   &macro_rbkt  &macro_bslh  &macro_grave
                &rgb_ug RGB_TOG  &rgb_ug RGB_SPI  &rgb_ug RGB_SPD  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_COLOR_HSB(185,0,0) &trans               &mmv MOVE_DOWN            &macro_under  &macro_plus   &macro_lbrc   &macro_rbrc  &macro_pipe  &macro_tilde
                                           &trans           &trans           &kp SPACE                                                                             &kp RET    &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&studio_unlock  &kp F1      &kp F2     &kp F3       &kp F4     &kp F5                                  &mmv MOVE_UP                     &kp F6       &kp F7     &kp F8       &kp F9      &kp F10          &kp F11
&trans          &trans      &mkp LCLK  &mkp MCLK    &mkp RCLK  &mkp MB4                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &bootloader  &mkp LCLK  &mkp MCLK    &mkp RCLK   &kp PRINTSCREEN  &kp F12
&trans          &sys_reset  &trans     &bootloader  &trans     &mkp MB5  &kp C_MUTE                    &mmv MOVE_DOWN                   &trans       &trans     &bootloader  &sys_reset  &kp SCROLLLOCK   &kp PAUSE_BREAK
                                       &trans       &trans     &trans                                                                   &trans       &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
